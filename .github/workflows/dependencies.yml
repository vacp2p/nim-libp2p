name: Dependencies

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  bumper:
    # Pushes new refs to interested external repositories, so they can do early testing against libp2p's newer versions
    runs-on: ubuntu-latest
    name: Bump libp2p's version for ${{ matrix.target.repository }}:${{ matrix.target.ref }}
    strategy:
      fail-fast: false
      matrix:
        target:
          - repository: status-im/nimbus-eth2
            ref: unstable
            secret: ACTIONS_GITHUB_TOKEN_NIMBUS_ETH2
          - repository: waku-org/nwaku
            ref: master
            secret: ACTIONS_GITHUB_TOKEN_NWAKU
          - repository: codex-storage/nim-codex
            ref: master
            secret: ACTIONS_GITHUB_TOKEN_NIM_CODEX
    steps:
      - name: Clone target repository
        uses: actions/checkout@v4
        with:
          repository: ${{ matrix.target.repository }}
          ref: ${{ matrix.target.ref}}
          path: nbc
          fetch-depth: 0
          token: ${{ secrets[matrix.target.secret] }}

      - name: Checkout this ref in target repository
        run: |
          cd nbc
          git submodule update --init vendor/nim-libp2p
          cd vendor/nim-libp2p
          git checkout $GITHUB_SHA

      - name: Push this ref to target repository
        run: |
          cd nbc
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name = "${{ github.actor }}"
          git commit --allow-empty -a -m "auto-bump nim-libp2p"
          git branch -D nim-libp2p-auto-bump-${{ matrix.target.ref }} || true
          git switch -c nim-libp2p-auto-bump-${{ matrix.target.ref }}
          git push -f origin nim-libp2p-auto-bump-${{ matrix.target.ref }}
  notify-on-failure:
    name: Notify Discord on Failure
    needs: [bumper]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Discord notification
        uses: ./.github/actions/discord_notify
        with:
          webhook_url: ${{ secrets.DISCORD_WEBHOOK_URL }}